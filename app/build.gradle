plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id("kotlin-kapt") // Only for Kotlin projects.
}
apply plugin: 'com.google.protobuf'
android {
    compileSdk 28
    buildToolsVersion "30.0.3"

    buildFeatures{
        viewBinding = true
    }

    defaultConfig {
        applicationId "com.asuka.androidopensourcelibrarystudydemo"
        minSdk 21
        targetSdk 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a'
        }

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility "1.8"
        targetCompatibility "1.8"
    }
    packagingOptions {
        resources {
            excludes += ['META-INF/INDEX.LIST', 'META-INF/BenchmarkList', 'META-INF/io.netty.versions.properties', 'META-INF/CompilerHints']
        }
    }

//    protobuf {
//        protoc {
//            artifact = 'com.google.protobuf:protoc:3.19.1' // 配置编译器
//        }
//        generateProtoTasks {
//            all().each { task ->
//                task.builtins {
//                    remove java
//                }
//                task.builtins {
//                    java {}// 生产java源码
//                }
//            }
//        }
//    }

//    sourceSets {
//        main {
//            java {
//                srcDir 'src/main/java'
//            }
//            proto {
//                srcDir 'src/main/java/com/asuka/androidopensourcelibrarystudydemo/modle/proto'  //指定.proto文件路径
//            }
//        }
//    }

}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation project(path: ':mqtt')
    implementation project(path: ':XHttp')
    implementation project(path: ':XLog')
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    // Android 支持 Rxjava
// 此处一定要注意使用RxJava2的版本
    implementation("io.reactivex.rxjava2:rxandroid:2.1.1")
    implementation 'io.reactivex.rxjava2:rxjava:2.2.21'
    implementation 'org.reactivestreams:reactive-streams:1.0.3'
    implementation("io.reactivex:rxjava:1.3.8")
// Android 支持 Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'

// 衔接 Retrofit & RxJava
// 此处一定要注意使用RxJava2的版本
    implementation 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'

// Gson解析转换
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
// Fastjson解析转换
    implementation 'org.ligboy.retrofit2:converter-fastjson-android:2.1.0'

    //logger
    // https://mvnrepository.com/artifact/com.jakewharton.timber/timber
    implementation group: 'com.jakewharton.timber', name: 'timber', version: '5.0.1'

    // https://mvnrepository.com/artifact/com.alibaba/fastjson
    implementation group: 'com.alibaba', name: 'fastjson', version: '2.0.3.graal'

    //https://natario1.github.io/CameraView
    implementation "com.otaliastudios:cameraview:2.7.2"

    //https://github.com/bumptech/glide
    implementation 'com.github.bumptech.glide:glide:4.13.2'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.13.2'

    //	https://github.com/koush/AndroidAsync
    implementation("com.koushikdutta.async:androidasync:3.1.0")

    // RxNetty
    implementation("io.reactivex:rxnetty-tcp:0.5.3")
    implementation("io.reactivex:rxnetty-common:0.5.3")
    implementation 'io.netty:netty-buffer:5.0.0.Alpha2'
    implementation 'io.netty:netty-handler:5.0.0.Alpha2'

    // 腾讯MMKV https://github.com/Tencent/MMKV
    implementation 'com.tencent:mmkv:1.2.13'

    // protobuff https://github.com/protocolbuffers/protobuf/tree/master/java
    implementation 'com.google.protobuf:protobuf-java:3.19.1'
    //protobuf编译器
    implementation 'com.google.protobuf:protoc:3.19.1'

    //kotlin
    implementation('org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.1-native-mt')

    //ObjectBox调试
    debugImplementation("io.objectbox:objectbox-android-objectbrowser:$objectboxVersion")
    releaseImplementation("io.objectbox:objectbox-android:3.1.3")

    //图片选择库Matissehttps://github.com/zhihu/Matisse
    implementation 'com.zhihu.android:matisse:0.5.3-beta3'

    // 动态权限RxPermissions
    implementation group: 'com.tbruyelle.rxpermissions2', name: 'rxpermissions', version: '0.9.5'

    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.9.1'

    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.5'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.5'

    implementation 'com.teprinciple:mailsender:1.2.0'

    implementation("com.alibaba.android:vlayout:1.3.0")

    //占位符
    implementation 'me.samlss:broccoli:1.0.0'

    //
    implementation 'com.iqiyi.xcrash:xcrash-android-lib:3.1.0'
}
//启用ObjectBox调试必须将objectBox依赖插件代码写在最后，否则会重复引用库冲突
apply plugin: "io.objectbox"